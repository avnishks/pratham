Archive member included because of file (symbol)

/usr/lib/gcc/avr/4.5.1/avr5/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/4.5.1/../../../../avr/lib/avr5/crtm32.o (exit)
/usr/lib/gcc/avr/4.5.1/avr5/libgcc.a(_copy_data.o)
                              spi.o (__do_copy_data)
/usr/lib/gcc/avr/4.5.1/avr5/libgcc.a(_clear_bss.o)
                              spi.o (__do_clear_bss)
/usr/lib/gcc/avr/4.5.1/../../../../avr/lib/avr5/libc.a(sprintf.o)
                              sun.o (sprintf)
/usr/lib/gcc/avr/4.5.1/../../../../avr/lib/avr5/libc.a(vfprintf_std.o)
                              /usr/lib/gcc/avr/4.5.1/../../../../avr/lib/avr5/libc.a(sprintf.o) (vfprintf)
/usr/lib/gcc/avr/4.5.1/../../../../avr/lib/avr5/libc.a(strnlen_P.o)
                              /usr/lib/gcc/avr/4.5.1/../../../../avr/lib/avr5/libc.a(vfprintf_std.o) (strnlen_P)
/usr/lib/gcc/avr/4.5.1/../../../../avr/lib/avr5/libc.a(strnlen.o)
                              /usr/lib/gcc/avr/4.5.1/../../../../avr/lib/avr5/libc.a(vfprintf_std.o) (strnlen)
/usr/lib/gcc/avr/4.5.1/../../../../avr/lib/avr5/libc.a(fputc.o)
                              /usr/lib/gcc/avr/4.5.1/../../../../avr/lib/avr5/libc.a(vfprintf_std.o) (fputc)
/usr/lib/gcc/avr/4.5.1/../../../../avr/lib/avr5/libc.a(ultoa_invert.o)
                              /usr/lib/gcc/avr/4.5.1/../../../../avr/lib/avr5/libc.a(vfprintf_std.o) (__ultoa_invert)
/usr/lib/gcc/avr/4.5.1/avr5/libgcc.a(_prologue.o)
                              /usr/lib/gcc/avr/4.5.1/../../../../avr/lib/avr5/libc.a(sprintf.o) (__prologue_saves__)
/usr/lib/gcc/avr/4.5.1/avr5/libgcc.a(_epilogue.o)
                              /usr/lib/gcc/avr/4.5.1/../../../../avr/lib/avr5/libc.a(sprintf.o) (__epilogue_restores__)

Allocating common symbols
Common symbol       size              file

reading             0xc               sun.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x0000000000000000 0x0000000000020000 xr
data             0x0000000000800060 0x000000000000ffa0 rw !x
eeprom           0x0000000000810000 0x0000000000010000 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD /usr/lib/gcc/avr/4.5.1/../../../../avr/lib/avr5/crtm32.o
LOAD spi.o
LOAD sun.o
LOAD /usr/lib/gcc/avr/4.5.1/../../../../avr/lib/avr5/libm.a
LOAD /usr/lib/gcc/avr/4.5.1/avr5/libgcc.a
LOAD /usr/lib/gcc/avr/4.5.1/../../../../avr/lib/avr5/libc.a
LOAD /usr/lib/gcc/avr/4.5.1/avr5/libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x0000000000000000      0x7d8
 *(.vectors)
 .vectors       0x0000000000000000       0x54 /usr/lib/gcc/avr/4.5.1/../../../../avr/lib/avr5/crtm32.o
                0x0000000000000000                __vectors
                0x0000000000000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x0000000000000054                . = ALIGN (0x2)
                0x0000000000000054                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x0000000000000054        0x0 linker stubs
 *(.trampolines*)
                0x0000000000000054                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x0000000000000054                __ctors_start = .
 *(.ctors)
                0x0000000000000054                __ctors_end = .
                0x0000000000000054                __dtors_start = .
 *(.dtors)
                0x0000000000000054                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x0000000000000054        0x0 /usr/lib/gcc/avr/4.5.1/../../../../avr/lib/avr5/crtm32.o
                0x0000000000000054                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x0000000000000054        0xc /usr/lib/gcc/avr/4.5.1/../../../../avr/lib/avr5/crtm32.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x0000000000000060       0x16 /usr/lib/gcc/avr/4.5.1/avr5/libgcc.a(_copy_data.o)
                0x0000000000000060                __do_copy_data
 .init4         0x0000000000000076       0x10 /usr/lib/gcc/avr/4.5.1/avr5/libgcc.a(_clear_bss.o)
                0x0000000000000076                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x0000000000000086        0x8 /usr/lib/gcc/avr/4.5.1/../../../../avr/lib/avr5/crtm32.o
 *(.init9)
 *(.text)
 .text          0x000000000000008e        0x4 /usr/lib/gcc/avr/4.5.1/../../../../avr/lib/avr5/crtm32.o
                0x000000000000008e                __vector_1
                0x000000000000008e                __vector_12
                0x000000000000008e                __bad_interrupt
                0x000000000000008e                __vector_6
                0x000000000000008e                __vector_3
                0x000000000000008e                __vector_11
                0x000000000000008e                __vector_13
                0x000000000000008e                __vector_17
                0x000000000000008e                __vector_19
                0x000000000000008e                __vector_7
                0x000000000000008e                __vector_5
                0x000000000000008e                __vector_4
                0x000000000000008e                __vector_9
                0x000000000000008e                __vector_2
                0x000000000000008e                __vector_15
                0x000000000000008e                __vector_8
                0x000000000000008e                __vector_14
                0x000000000000008e                __vector_10
                0x000000000000008e                __vector_16
                0x000000000000008e                __vector_18
                0x000000000000008e                __vector_20
 .text          0x0000000000000092       0x50 spi.o
                0x0000000000000092                init_SPI
                0x00000000000000a0                init_SPI_trans
                0x00000000000000ba                SPI_send
                0x00000000000000d8                SPI_transfer
 .text          0x00000000000000e2      0x130 sun.o
                0x00000000000000e2                init_UART
                0x00000000000000fe                send_UART
                0x0000000000000114                configure_SS
                0x000000000000011c                poll_SS
                0x000000000000015e                main
 .text          0x0000000000000212        0x0 /usr/lib/gcc/avr/4.5.1/avr5/libgcc.a(_exit.o)
 .text          0x0000000000000212        0x0 /usr/lib/gcc/avr/4.5.1/avr5/libgcc.a(_copy_data.o)
 .text          0x0000000000000212        0x0 /usr/lib/gcc/avr/4.5.1/avr5/libgcc.a(_clear_bss.o)
 .text          0x0000000000000212        0x0 /usr/lib/gcc/avr/4.5.1/../../../../avr/lib/avr5/libc.a(sprintf.o)
 .text          0x0000000000000212        0x0 /usr/lib/gcc/avr/4.5.1/../../../../avr/lib/avr5/libc.a(vfprintf_std.o)
 .text          0x0000000000000212        0x0 /usr/lib/gcc/avr/4.5.1/../../../../avr/lib/avr5/libc.a(strnlen_P.o)
 .text          0x0000000000000212        0x0 /usr/lib/gcc/avr/4.5.1/../../../../avr/lib/avr5/libc.a(strnlen.o)
 .text          0x0000000000000212        0x0 /usr/lib/gcc/avr/4.5.1/../../../../avr/lib/avr5/libc.a(fputc.o)
 .text          0x0000000000000212        0x0 /usr/lib/gcc/avr/4.5.1/../../../../avr/lib/avr5/libc.a(ultoa_invert.o)
 .text          0x0000000000000212        0x0 /usr/lib/gcc/avr/4.5.1/avr5/libgcc.a(_prologue.o)
 .text          0x0000000000000212        0x0 /usr/lib/gcc/avr/4.5.1/avr5/libgcc.a(_epilogue.o)
                0x0000000000000212                . = ALIGN (0x2)
 *(.text.*)
 .text.libgcc   0x0000000000000212        0x0 /usr/lib/gcc/avr/4.5.1/avr5/libgcc.a(_exit.o)
 .text.libgcc   0x0000000000000212        0x0 /usr/lib/gcc/avr/4.5.1/avr5/libgcc.a(_copy_data.o)
 .text.libgcc   0x0000000000000212        0x0 /usr/lib/gcc/avr/4.5.1/avr5/libgcc.a(_clear_bss.o)
 .text.avr-libc
                0x0000000000000212       0x46 /usr/lib/gcc/avr/4.5.1/../../../../avr/lib/avr5/libc.a(sprintf.o)
                0x0000000000000212                sprintf
 .text.avr-libc
                0x0000000000000258      0x3ce /usr/lib/gcc/avr/4.5.1/../../../../avr/lib/avr5/libc.a(vfprintf_std.o)
                0x0000000000000258                vfprintf
 .text.avr-libc
                0x0000000000000626       0x16 /usr/lib/gcc/avr/4.5.1/../../../../avr/lib/avr5/libc.a(strnlen_P.o)
                0x0000000000000626                strnlen_P
 .text.avr-libc
                0x000000000000063c       0x16 /usr/lib/gcc/avr/4.5.1/../../../../avr/lib/avr5/libc.a(strnlen.o)
                0x000000000000063c                strnlen
 .text.avr-libc
                0x0000000000000652       0x58 /usr/lib/gcc/avr/4.5.1/../../../../avr/lib/avr5/libc.a(fputc.o)
                0x0000000000000652                fputc
 .text.avr-libc
                0x00000000000006aa       0xbc /usr/lib/gcc/avr/4.5.1/../../../../avr/lib/avr5/libc.a(ultoa_invert.o)
                0x00000000000006aa                __ultoa_invert
 .text.libgcc   0x0000000000000766       0x38 /usr/lib/gcc/avr/4.5.1/avr5/libgcc.a(_prologue.o)
                0x0000000000000766                __prologue_saves__
 .text.libgcc   0x000000000000079e       0x36 /usr/lib/gcc/avr/4.5.1/avr5/libgcc.a(_epilogue.o)
                0x000000000000079e                __epilogue_restores__
                0x00000000000007d4                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x00000000000007d4        0x0 /usr/lib/gcc/avr/4.5.1/avr5/libgcc.a(_exit.o)
                0x00000000000007d4                exit
                0x00000000000007d4                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x00000000000007d4        0x4 /usr/lib/gcc/avr/4.5.1/avr5/libgcc.a(_exit.o)
 *(.fini0)
                0x00000000000007d8                _etext = .

.data           0x0000000000800060        0x8 load address 0x00000000000007d8
                0x0000000000800060                PROVIDE (__data_start, .)
 *(.data)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.5.1/../../../../avr/lib/avr5/crtm32.o
 .data          0x0000000000800060        0x0 spi.o
 .data          0x0000000000800060        0x8 sun.o
 .data          0x0000000000800068        0x0 /usr/lib/gcc/avr/4.5.1/avr5/libgcc.a(_exit.o)
 .data          0x0000000000800068        0x0 /usr/lib/gcc/avr/4.5.1/avr5/libgcc.a(_copy_data.o)
 .data          0x0000000000800068        0x0 /usr/lib/gcc/avr/4.5.1/avr5/libgcc.a(_clear_bss.o)
 .data          0x0000000000800068        0x0 /usr/lib/gcc/avr/4.5.1/../../../../avr/lib/avr5/libc.a(sprintf.o)
 .data          0x0000000000800068        0x0 /usr/lib/gcc/avr/4.5.1/../../../../avr/lib/avr5/libc.a(vfprintf_std.o)
 .data          0x0000000000800068        0x0 /usr/lib/gcc/avr/4.5.1/../../../../avr/lib/avr5/libc.a(strnlen_P.o)
 .data          0x0000000000800068        0x0 /usr/lib/gcc/avr/4.5.1/../../../../avr/lib/avr5/libc.a(strnlen.o)
 .data          0x0000000000800068        0x0 /usr/lib/gcc/avr/4.5.1/../../../../avr/lib/avr5/libc.a(fputc.o)
 .data          0x0000000000800068        0x0 /usr/lib/gcc/avr/4.5.1/../../../../avr/lib/avr5/libc.a(ultoa_invert.o)
 .data          0x0000000000800068        0x0 /usr/lib/gcc/avr/4.5.1/avr5/libgcc.a(_prologue.o)
 .data          0x0000000000800068        0x0 /usr/lib/gcc/avr/4.5.1/avr5/libgcc.a(_epilogue.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x0000000000800068                . = ALIGN (0x2)
                0x0000000000800068                _edata = .
                0x0000000000800068                PROVIDE (__data_end, .)

.bss            0x0000000000800068        0xc
                0x0000000000800068                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x0000000000800068        0x0 /usr/lib/gcc/avr/4.5.1/../../../../avr/lib/avr5/crtm32.o
 .bss           0x0000000000800068        0x0 spi.o
 .bss           0x0000000000800068        0x0 sun.o
 .bss           0x0000000000800068        0x0 /usr/lib/gcc/avr/4.5.1/avr5/libgcc.a(_exit.o)
 .bss           0x0000000000800068        0x0 /usr/lib/gcc/avr/4.5.1/avr5/libgcc.a(_copy_data.o)
 .bss           0x0000000000800068        0x0 /usr/lib/gcc/avr/4.5.1/avr5/libgcc.a(_clear_bss.o)
 .bss           0x0000000000800068        0x0 /usr/lib/gcc/avr/4.5.1/../../../../avr/lib/avr5/libc.a(sprintf.o)
 .bss           0x0000000000800068        0x0 /usr/lib/gcc/avr/4.5.1/../../../../avr/lib/avr5/libc.a(vfprintf_std.o)
 .bss           0x0000000000800068        0x0 /usr/lib/gcc/avr/4.5.1/../../../../avr/lib/avr5/libc.a(strnlen_P.o)
 .bss           0x0000000000800068        0x0 /usr/lib/gcc/avr/4.5.1/../../../../avr/lib/avr5/libc.a(strnlen.o)
 .bss           0x0000000000800068        0x0 /usr/lib/gcc/avr/4.5.1/../../../../avr/lib/avr5/libc.a(fputc.o)
 .bss           0x0000000000800068        0x0 /usr/lib/gcc/avr/4.5.1/../../../../avr/lib/avr5/libc.a(ultoa_invert.o)
 .bss           0x0000000000800068        0x0 /usr/lib/gcc/avr/4.5.1/avr5/libgcc.a(_prologue.o)
 .bss           0x0000000000800068        0x0 /usr/lib/gcc/avr/4.5.1/avr5/libgcc.a(_epilogue.o)
 *(.bss*)
 *(COMMON)
 COMMON         0x0000000000800068        0xc sun.o
                0x0000000000800068                reading
                0x0000000000800074                PROVIDE (__bss_end, .)
                0x00000000000007d8                __data_load_start = LOADADDR (.data)
                0x00000000000007e0                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x0000000000800074        0x0
                0x0000000000800074                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x0000000000800074                PROVIDE (__noinit_end, .)
                0x0000000000800074                _end = .
                0x0000000000800074                PROVIDE (__heap_start, .)

.eeprom         0x0000000000810000        0x0
 *(.eeprom*)
                0x0000000000810000                __eeprom_end = .

.stab           0x0000000000000000     0x27f0
 *(.stab)
 .stab          0x0000000000000000      0x6cc /usr/lib/gcc/avr/4.5.1/../../../../avr/lib/avr5/crtm32.o
 .stab          0x00000000000006cc      0x5f4 spi.o
                                        0x600 (size before relaxing)
 .stab          0x0000000000000cc0      0x4f8 sun.o
                                        0x75c (size before relaxing)
 .stab          0x00000000000011b8      0x3a8 /usr/lib/gcc/avr/4.5.1/../../../../avr/lib/avr5/libc.a(sprintf.o)
                                        0x3d8 (size before relaxing)
 .stab          0x0000000000001560      0xaf8 /usr/lib/gcc/avr/4.5.1/../../../../avr/lib/avr5/libc.a(vfprintf_std.o)
                                        0xcd8 (size before relaxing)
 .stab          0x0000000000002058       0x9c /usr/lib/gcc/avr/4.5.1/../../../../avr/lib/avr5/libc.a(strnlen_P.o)
                                         0xa8 (size before relaxing)
 .stab          0x00000000000020f4       0x9c /usr/lib/gcc/avr/4.5.1/../../../../avr/lib/avr5/libc.a(strnlen.o)
                                         0xa8 (size before relaxing)
 .stab          0x0000000000002190      0x1e0 /usr/lib/gcc/avr/4.5.1/../../../../avr/lib/avr5/libc.a(fputc.o)
                                        0x3c0 (size before relaxing)
 .stab          0x0000000000002370      0x480 /usr/lib/gcc/avr/4.5.1/../../../../avr/lib/avr5/libc.a(ultoa_invert.o)
                                        0x48c (size before relaxing)

.stabstr        0x0000000000000000     0x150b
 *(.stabstr)
 .stabstr       0x0000000000000000     0x150b /usr/lib/gcc/avr/4.5.1/../../../../avr/lib/avr5/crtm32.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info)
 *(.gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(test.out elf32-avr)
LOAD linker stubs
