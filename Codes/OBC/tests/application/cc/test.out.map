Archive member included because of file (symbol)

/usr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/crtm32.o (exit)
/usr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_copy_data.o)
                              spi.o (__do_copy_data)
/usr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_clear_bss.o)
                              spi.o (__do_clear_bss)
/usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/libc.a(strcpy.o)
                              main.o (strcpy)
/usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/libc.a(sprintf.o)
                              functions.o (sprintf)
/usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/libc.a(vfprintf_std.o)
                              /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/libc.a(sprintf.o) (vfprintf)
/usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/libc.a(strnlen_P.o)
                              /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/libc.a(vfprintf_std.o) (strnlen_P)
/usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/libc.a(strnlen.o)
                              /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/libc.a(vfprintf_std.o) (strnlen)
/usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/libc.a(fputc.o)
                              /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/libc.a(vfprintf_std.o) (fputc)
/usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/libc.a(ultoa_invert.o)
                              /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/libc.a(vfprintf_std.o) (__ultoa_invert)
/usr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_prologue.o)
                              /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/libc.a(sprintf.o) (__prologue_saves__)
/usr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_epilogue.o)
                              /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/libc.a(sprintf.o) (__epilogue_restores__)

Allocating common symbols
Common symbol       size              file

arr                 0x64              functions.o
x                   0x1               functions.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x0000000000000000 0x0000000000020000 xr
data             0x0000000000800060 0x000000000000ffa0 rw !x
eeprom           0x0000000000810000 0x0000000000010000 rw !x
fuse             0x0000000000820000 0x0000000000000400 rw !x
lock             0x0000000000830000 0x0000000000000400 rw !x
signature        0x0000000000840000 0x0000000000000400 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/crtm32.o
LOAD spi.o
LOAD ax25.o
LOAD transmit.o
LOAD functions.o
LOAD main.o
LOAD /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/libm.a
LOAD /usr/lib/gcc/avr/4.3.4/avr5/libgcc.a
LOAD /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/libc.a
LOAD /usr/lib/gcc/avr/4.3.4/avr5/libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x0000000000000000      0xd48
 *(.vectors)
 .vectors       0x0000000000000000       0x54 /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/crtm32.o
                0x0000000000000000                __vectors
                0x0000000000000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x0000000000000054                . = ALIGN (0x2)
                0x0000000000000054                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x0000000000000054        0x0 linker stubs
 *(.trampolines*)
                0x0000000000000054                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x0000000000000054                __ctors_start = .
 *(.ctors)
                0x0000000000000054                __ctors_end = .
                0x0000000000000054                __dtors_start = .
 *(.dtors)
                0x0000000000000054                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x0000000000000054        0x0 /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/crtm32.o
                0x0000000000000054                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x0000000000000054        0xc /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/crtm32.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x0000000000000060       0x16 /usr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_copy_data.o)
                0x0000000000000060                __do_copy_data
 .init4         0x0000000000000076       0x10 /usr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_clear_bss.o)
                0x0000000000000076                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x0000000000000086        0x8 /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/crtm32.o
 *(.init9)
 *(.text)
 .text          0x000000000000008e        0x4 /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/crtm32.o
                0x000000000000008e                __vector_1
                0x000000000000008e                __vector_12
                0x000000000000008e                __bad_interrupt
                0x000000000000008e                __vector_6
                0x000000000000008e                __vector_3
                0x000000000000008e                __vector_11
                0x000000000000008e                __vector_13
                0x000000000000008e                __vector_17
                0x000000000000008e                __vector_19
                0x000000000000008e                __vector_7
                0x000000000000008e                __vector_5
                0x000000000000008e                __vector_4
                0x000000000000008e                __vector_9
                0x000000000000008e                __vector_2
                0x000000000000008e                __vector_15
                0x000000000000008e                __vector_8
                0x000000000000008e                __vector_14
                0x000000000000008e                __vector_10
                0x000000000000008e                __vector_16
                0x000000000000008e                __vector_18
                0x000000000000008e                __vector_20
 .text          0x0000000000000092       0x64 spi.o
                0x0000000000000092                init_SPI_slave
                0x00000000000000a0                init_SPI
                0x00000000000000ac                init_SPI_trans
                0x00000000000000ca                SPI_send
                0x00000000000000ec                SPI_transfer
 .text          0x00000000000000f6      0x198 ax25.o
                0x00000000000000f6                update_crc_16
                0x0000000000000120                calculate_crc_16
                0x0000000000000160                make_ax25_frame_from_data
 .text          0x000000000000028e       0x8a transmit.o
                0x000000000000028e                cc1020_init_dio
                0x0000000000000296                cc1020_transmit_bit
                0x00000000000002aa                cc1020_transmit_packet
 .text          0x0000000000000318      0x2ee functions.o
                0x0000000000000318                ReadFromCC1020Register
                0x000000000000032a                WriteToCC1020Register
                0x0000000000000344                CalibrateCC1020
                0x0000000000000400                SetupCC1020TX
                0x0000000000000494                WakeUpCC1020ToTX
                0x000000000000052c                SetupCC1020Allregisters
                0x0000000000000554                ResetCC1020
                0x0000000000000566                SetupCC1020PD
                0x00000000000005dc                init_CC1020
 .text          0x0000000000000606      0x180 main.o
                0x0000000000000606                init_UART
                0x0000000000000622                send_UART
                0x0000000000000644                main
 .text          0x0000000000000786        0x0 /usr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_exit.o)
 .text          0x0000000000000786        0x0 /usr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_copy_data.o)
 .text          0x0000000000000786        0x0 /usr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_clear_bss.o)
 .text          0x0000000000000786        0x0 /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/libc.a(strcpy.o)
 .text          0x0000000000000786        0x0 /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/libc.a(sprintf.o)
 .text          0x0000000000000786        0x0 /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/libc.a(vfprintf_std.o)
 .text          0x0000000000000786        0x0 /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/libc.a(strnlen_P.o)
 .text          0x0000000000000786        0x0 /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/libc.a(strnlen.o)
 .text          0x0000000000000786        0x0 /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/libc.a(fputc.o)
 .text          0x0000000000000786        0x0 /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/libc.a(ultoa_invert.o)
 .text          0x0000000000000786        0x0 /usr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_prologue.o)
 .text          0x0000000000000786        0x0 /usr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_epilogue.o)
                0x0000000000000786                . = ALIGN (0x2)
 *(.text.*)
 .text.libgcc   0x0000000000000786        0x0 /usr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_exit.o)
 .text.libgcc   0x0000000000000786        0x0 /usr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_copy_data.o)
 .text.libgcc   0x0000000000000786        0x0 /usr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_clear_bss.o)
 .text.avr-libc
                0x0000000000000786        0xe /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/libc.a(strcpy.o)
                0x0000000000000786                strcpy
 .text.avr-libc
                0x0000000000000794       0x48 /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/libc.a(sprintf.o)
                0x0000000000000794                sprintf
 .text.avr-libc
                0x00000000000007dc      0x3ba /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/libc.a(vfprintf_std.o)
                0x00000000000007dc                vfprintf
 .text.avr-libc
                0x0000000000000b96       0x16 /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/libc.a(strnlen_P.o)
                0x0000000000000b96                strnlen_P
 .text.avr-libc
                0x0000000000000bac       0x16 /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/libc.a(strnlen.o)
                0x0000000000000bac                strnlen
 .text.avr-libc
                0x0000000000000bc2       0x58 /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/libc.a(fputc.o)
                0x0000000000000bc2                fputc
 .text.avr-libc
                0x0000000000000c1a       0xbc /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/libc.a(ultoa_invert.o)
                0x0000000000000c1a                __ultoa_invert
 .text.libgcc   0x0000000000000cd6       0x38 /usr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_prologue.o)
                0x0000000000000cd6                __prologue_saves__
 .text.libgcc   0x0000000000000d0e       0x36 /usr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_epilogue.o)
                0x0000000000000d0e                __epilogue_restores__
                0x0000000000000d44                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x0000000000000d44        0x0 /usr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_exit.o)
                0x0000000000000d44                exit
                0x0000000000000d44                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x0000000000000d44        0x4 /usr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_exit.o)
 *(.fini0)
                0x0000000000000d48                _etext = .

.data           0x0000000000800060       0x58 load address 0x0000000000000d48
                0x0000000000800060                PROVIDE (__data_start, .)
 *(.data)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/crtm32.o
 .data          0x0000000000800060        0x0 spi.o
 .data          0x0000000000800060       0x15 ax25.o
 .data          0x0000000000800075        0x0 transmit.o
 .data          0x0000000000800075       0x2b functions.o
                0x0000000000800080                DefaultConfig433
 .data          0x00000000008000a0       0x17 main.o
 .data          0x00000000008000b7        0x0 /usr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_exit.o)
 .data          0x00000000008000b7        0x0 /usr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_copy_data.o)
 .data          0x00000000008000b7        0x0 /usr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_clear_bss.o)
 .data          0x00000000008000b7        0x0 /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/libc.a(strcpy.o)
 .data          0x00000000008000b7        0x0 /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/libc.a(sprintf.o)
 .data          0x00000000008000b7        0x0 /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/libc.a(vfprintf_std.o)
 .data          0x00000000008000b7        0x0 /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/libc.a(strnlen_P.o)
 .data          0x00000000008000b7        0x0 /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/libc.a(strnlen.o)
 .data          0x00000000008000b7        0x0 /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/libc.a(fputc.o)
 .data          0x00000000008000b7        0x0 /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/libc.a(ultoa_invert.o)
 .data          0x00000000008000b7        0x0 /usr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_prologue.o)
 .data          0x00000000008000b7        0x0 /usr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_epilogue.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x00000000008000b8                . = ALIGN (0x2)
 *fill*         0x00000000008000b7        0x1 00
                0x00000000008000b8                _edata = .
                0x00000000008000b8                PROVIDE (__data_end, .)

.bss            0x00000000008000b8       0x65
                0x00000000008000b8                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x00000000008000b8        0x0 /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/crtm32.o
 .bss           0x00000000008000b8        0x0 spi.o
 .bss           0x00000000008000b8        0x0 ax25.o
 .bss           0x00000000008000b8        0x0 transmit.o
 .bss           0x00000000008000b8        0x0 functions.o
 .bss           0x00000000008000b8        0x0 main.o
 .bss           0x00000000008000b8        0x0 /usr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_exit.o)
 .bss           0x00000000008000b8        0x0 /usr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_copy_data.o)
 .bss           0x00000000008000b8        0x0 /usr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_clear_bss.o)
 .bss           0x00000000008000b8        0x0 /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/libc.a(strcpy.o)
 .bss           0x00000000008000b8        0x0 /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/libc.a(sprintf.o)
 .bss           0x00000000008000b8        0x0 /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/libc.a(vfprintf_std.o)
 .bss           0x00000000008000b8        0x0 /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/libc.a(strnlen_P.o)
 .bss           0x00000000008000b8        0x0 /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/libc.a(strnlen.o)
 .bss           0x00000000008000b8        0x0 /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/libc.a(fputc.o)
 .bss           0x00000000008000b8        0x0 /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/libc.a(ultoa_invert.o)
 .bss           0x00000000008000b8        0x0 /usr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_prologue.o)
 .bss           0x00000000008000b8        0x0 /usr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_epilogue.o)
 *(.bss*)
 *(COMMON)
 COMMON         0x00000000008000b8       0x65 functions.o
                0x00000000008000b8                arr
                0x000000000080011c                x
                0x000000000080011d                PROVIDE (__bss_end, .)
                0x0000000000000d48                __data_load_start = LOADADDR (.data)
                0x0000000000000da0                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x000000000080011d        0x0
                0x000000000080011d                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x000000000080011d                PROVIDE (__noinit_end, .)
                0x000000000080011d                _end = .
                0x000000000080011d                PROVIDE (__heap_start, .)

.eeprom         0x0000000000810000        0x0
 *(.eeprom*)
                0x0000000000810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab           0x0000000000000000     0x39a8
 *(.stab)
 .stab          0x0000000000000000      0x6b4 /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/crtm32.o
 .stab          0x00000000000006b4      0x624 spi.o
                                        0x630 (size before relaxing)
 .stab          0x0000000000000cd8      0x564 ax25.o
                                        0x7bc (size before relaxing)
 .stab          0x000000000000123c      0x414 transmit.o
                                        0x66c (size before relaxing)
 .stab          0x0000000000001650      0x7f8 functions.o
                                        0xa50 (size before relaxing)
 .stab          0x0000000000001e48      0x648 main.o
                                        0x8a0 (size before relaxing)
 .stab          0x0000000000002490       0x6c /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/libc.a(strcpy.o)
                                         0x78 (size before relaxing)
 .stab          0x00000000000024fc      0x3a8 /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/libc.a(sprintf.o)
                                        0x3d8 (size before relaxing)
 .stab          0x00000000000028a4      0x978 /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/libc.a(vfprintf_std.o)
                                        0xb58 (size before relaxing)
 .stab          0x000000000000321c       0x9c /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/libc.a(strnlen_P.o)
                                         0xa8 (size before relaxing)
 .stab          0x00000000000032b8       0x9c /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/libc.a(strnlen.o)
                                         0xa8 (size before relaxing)
 .stab          0x0000000000003354      0x1d4 /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/libc.a(fputc.o)
                                        0x3b4 (size before relaxing)
 .stab          0x0000000000003528      0x480 /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/libc.a(ultoa_invert.o)
                                        0x48c (size before relaxing)

.stabstr        0x0000000000000000     0x17ed
 *(.stabstr)
 .stabstr       0x0000000000000000     0x17ed /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/crtm32.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info)
 *(.gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(test.out elf32-avr)
LOAD linker stubs
